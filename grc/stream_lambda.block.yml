# auto-generated by grc.converter

id: pyqt_stream_lambda
label: Stream Lambda Block
category: '[pyqt]'

parameters:
-   id: fn
    label: function
    dtype: raw
    default: 'lambda input_items, output_index: (input_items[output_index][::2]**2)*0.1'
-   id: n_streams_in
    label: Num Input Streams
    dtype: int
    default: '1'
    hide: part
-   id: n_streams_out
    label: Num Output Streams
    dtype: int
    default: '1'
    hide: part
-   id: type_in
    label: Input Data Type
    dtype: enum
    options: [complex, float, int, short, byte]
    option_attributes:
        np: [numpy.complex64, numpy.float32, numpy.int32, numpy.int16, numpy.char]
    hide: part
-   id: type_out
    label: Output Data Type
    dtype: enum
    options: [complex, float, int, short, byte]
    option_attributes:
        np: [numpy.complex64, numpy.float32, numpy.int32, numpy.int16, numpy.char]
    hide: part

inputs:
-   domain: stream
    dtype: ${ type_in }
    multiplicity: ${ n_streams_in }

outputs:
-   label: pdus
    domain: stream
    dtype: ${ type_out }
    multiplicity: ${ n_streams_out }

templates:
    imports: |-
        import pyqt
        import numpy
    make: pyqt.stream_lambda(${fn},${n_streams_in}*[${type_in.np}],${n_streams_out}*[${type_out.np}])
    callbacks:
    - set_fn(${fn})

file_format: 1
